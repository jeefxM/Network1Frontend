{"version":3,"sources":["firebaseContext.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["FirebaseContext","React","createContext","getProfileFB","Promise","resolve","isSuccessful","setProfileFB","getAllProfilesFB","fetchBase","FirebaseProvider","children","useCallback","key","a","fetch","method","fetchRes","ok","json","profile","headers","body","JSON","stringify","message","statusText","Provider","value","socketURL","window","location","hostname","socket","io","transports","versionNames","DAppClient","name","tempID","uuidv4","App","useState","activeAccount","setActiveAccount","color","setColor","useContext","timestamp","Date","now","username","setProfile","profiles","setProfiles","usernameInput","setUsernameInput","enqueueSnackbar","useSnackbar","statusHistory","setStatusHistory","version","chainId","setChainId","signedResult","setSignedResult","useEffect","result","recentStatus","history","getProfiles","onProfileChange","data","concat","sort","b","parseFloat","find","prof","index","slice","on","off","web3","Web3","ethereum","currentProvider","selectedAddress","metamaskLogin","request","then","accounts","networkVersion","updateStatus","console","log","address","emit","variant","signDataV4","msgParams","domain","toString","verifyingContract","contents","from","wallets","to","primaryType","types","EIP712Domain","type","Group","Mail","Person","eth","getAccounts","params","sign","prevSignedResult","signedData","error","className","style","fontSize","display","alignItems","margin","justifyContent","Select","label","onChange","e","target","href","MenuItem","Button","marginLeft","onClick","marginTop","width","marginRight","overflowX","map","textAlign","height","backgroundColor","border","marginInline","title","size","navigator","clipboard","writeText","TextField","id","placeholder","event","length","onKeyPress","position","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","maxSnack","document","getElementById"],"mappings":"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","file":"static/js/main.9e2967ce.chunk.js","sourcesContent":["// @ts-nocheck\nimport React, { useCallback } from \"react\";\n\ninterface IProfile {\n  color: string;\n  timestamp: Date;\n  key: string;\n  username: string;\n}\nexport interface IFirebaseContext {\n  getProfileFB: (key: string) => Promise<IFetchResponseBase>;\n  setProfileFB: (profile: IProfile) => Promise<IFetchResponseBase>;\n\n  getAllProfilesFB: () => Promise<IFetchResponseBase>;\n}\n\nexport const FirebaseContext = React.createContext<IFirebaseContext>({\n  getProfileFB: () => Promise.resolve({ isSuccessful: false }),\n  setProfileFB: () => Promise.resolve({ isSuccessful: false }),\n  getAllProfilesFB: () => Promise.resolve({ isSuccessful: false }),\n});\n\nconst fetchBase =\n  process.env.NODE_ENV === \"development\"\n    ? \"\"\n    : \"https://network1backend.up.railway.app/\";\n\nexport const FirebaseProvider: React.FC = ({ children }) => {\n  const getProfileFB = useCallback(\n    async (key: string): Promise<IFetchResponseBase> => {\n      const fetchRes = await fetch(fetchBase + `/users/profile/${key}`, {\n        method: \"GET\",\n      });\n\n      if (fetchRes.ok) {\n        return await fetchRes.json();\n      }\n    },\n    []\n  );\n\n  const setProfileFB = useCallback(\n    async (profile: IProfile): Promise<IFetchResponseBase> => {\n      const fetchRes = await fetch(fetchBase + `/users/profile`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ profile: profile }),\n      });\n\n      if (fetchRes.ok) {\n        return { isSuccessful: true };\n      }\n\n      return { isSuccessful: false, message: fetchRes.statusText };\n    },\n    []\n  );\n\n  const getAllProfilesFB =\n    useCallback(async (): Promise<IFetchResponseBase> => {\n      const fetchRes = await fetch(fetchBase + `/users/allProfiles`, {\n        method: \"GET\",\n      });\n\n      if (fetchRes.ok) {\n        return await fetchRes.json();\n      }\n    }, []);\n\n  return (\n    <FirebaseContext.Provider\n      value={{\n        getProfileFB,\n        setProfileFB,\n        getAllProfilesFB,\n      }}\n    >\n      {children}\n    </FirebaseContext.Provider>\n  );\n};\n","// @ts-nocheck\nimport \"./App.css\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport Web3 from \"web3\"\n\n//ui\nimport { Button, Select, MenuItem, TextField } from \"@material-ui/core\";\n\n//logic\nimport io from \"socket.io-client\";\nimport { DAppClient } from \"@airgap/beacon-sdk\";\n//import _ from \"underscore\";\nimport { HexColorPicker } from \"react-colorful\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { FirebaseContext } from \"./firebaseContext\";\nimport { useSnackbar } from \"notistack\";\n\nconst socketURL =\n  window.location.hostname === \"localhost\"\n    ? \"ws://localhost:8000\"\n    : \"https://network1backend.up.railway.app/\";\n\nconst socket = io(socketURL, { transports: [\"websocket\"] });\nconst dAppClient = new DAppClient({ name: \"Beacon Docs\" });\nconst versionNames = [\"0\", \"v1.0\", \"v2.0\", \"v3.0\"];\nconst tempID = uuidv4();\n\nfunction App() {\n  const [activeAccount, setActiveAccount] = useState(null);\n  const [synced, setSynced] = useState(\"sync\");\n  const [showUnsync, setShowUnsync] = useState(false);\n  const [color, setColor] = useState(\"#FFFF00\");\n  const { getProfileFB, setProfileFB, getAllProfilesFB } =\n    useContext(FirebaseContext);\n  const [profile, setProfile] = useState({\n    color: color,\n    timestamp: Date.now(),\n    key: tempID,\n    username: \"\",\n  });\n  const [profiles, setProfiles] = useState([\n    { color: \"blue\", timestamp: Date.now(), key: tempID, username: \"user x\" },\n  ]);\n  const [usernameInput, setUsernameInput] = React.useState(\"\");\n  const { enqueueSnackbar } = useSnackbar();\n  const [statusHistory, setStatusHistory] = useState([]);\n  const [\n    version,\n    //setVersion\n  ] = useState(1);\n  const [metamaskAccount, setMetamaskAccount] = useState(\"\");\n  const [chainId, setChainId] = useState(\"\");\n  const [signedResult, setSignedResult] = useState([{}]); \n\n  const handleChangeUsername = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.value.length < 25) setUsernameInput(event.target.value);\n    else setUsernameInput(event.target.value.slice(0, 25));\n  };\n  \n  \n  useEffect(() => {\n    async function getProfiles() {\n      let result = await getAllProfilesFB();\n      setProfiles(result.recentStatus);\n      setStatusHistory(result.history);\n    }\n    getProfiles();\n  }, [getAllProfilesFB]);\n\n  useEffect(() => {\n    const onProfileChange = (data) => {\n      \n      setStatusHistory(\n        statusHistory\n          .concat(data)\n          .sort((a, b) => parseFloat(b.timestamp) - parseFloat(a.timestamp))\n          \n      );\n\n      //recent\n      profiles.find(function (prof, index) {\n        if (prof.key === data.key) {\n          setProfiles([\n            ...profiles.slice(0, index),\n            data,\n            ...profiles.slice(index + 1),\n          ]);\n          return true;\n        }\n        return false;\n      });\n    };\n\n    socket.on(\"profile\", onProfileChange);\n\n    return () => {\n      socket.off(\"profile\", onProfileChange);\n    };\n  }, [profiles, setProfiles, statusHistory]);\n\n  useEffect(() => {\n    const web3 = new Web3(window.ethereum);\n    // Check if MetaMask is already logged in\n    if (web3.currentProvider.selectedAddress) {\n      setActiveAccount(web3.currentProvider.selectedAddress);\n    }\n  }, []);\n  \n  const metamaskLogin = () => {\n    window.ethereum\n      .request({ method: \"eth_requestAccounts\" })\n      .then((accounts) => {\n        setActiveAccount(accounts);\n        setChainId(window.ethereum.networkVersion);\n      }); // Basic Metamask SignIn to get User's public address and ChainId\n  };\n  \n\n  \n  \n  async function updateStatus() {\n    metamaskLogin();\n    \n    // console.log(window.Object.message)\n    \n  \n    \n    if (activeAccount && signedResult) {\n\n      let timestamp = Date.now();\n      console.log(timestamp);\n      setProfile({\n        ...profile,\n        color: color,\n        key: activeAccount.address,\n        username: usernameInput,\n        timestamp: timestamp,\n      });\n      //add socket\n      socket.emit(\"profile\", {\n        ...profile,\n        color: color,\n        key: activeAccount.address,\n        username: usernameInput,\n        timestamp: timestamp,\n      });\n      setProfileFB({\n        ...profile,\n        color: color,\n        key: activeAccount.address,\n        username: usernameInput,\n        timestamp: timestamp,\n      });\n      setStatusHistory(\n          statusHistory\n            .concat([\n              {\n                ...profile,\n                color: color,\n                key: activeAccount.address,\n                username: usernameInput,\n                timestamp: timestamp,\n              },\n            ])\n            .sort((a, b) => parseFloat(b.timestamp) - parseFloat(a.timestamp))\n      );\n      enqueueSnackbar(\"Status Updated ! \", {\n        variant: \"success\",\n      });\n      setUsernameInput(\"\");\n    } else{\n      enqueueSnackbar(\"User decliend the message !\", {\n        variant: \"error\"\n      })\n    }\n  }\n\n  const handleKeyPress = (event) => {\n    if (event.key === \"Enter\") {\n      updateStatus();\n    }\n  };\n\n  \n\n  const signDataV4 = async () => {\n    \n    const { ethereum } = window;\n    const web3 = new Web3(window.ethereum);\n    console.log(profile)\n    const msgParams = {\n      domain: {\n        chainId: chainId.toString(),\n        name: \"Ether Mail\",\n        verifyingContract: \"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\",\n        version: \"1\",\n      },\n      message: {\n        contents:  profile.color,\n        from: {\n          name: usernameInput,\n          wallets: [\n            activeAccount.toString()\n            \n          ],\n        },\n        to: [\n          {\n            name: \"OSFD Network 1.0\",\n            wallets: [\n              \"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\",\n              \"0xB0BdaBea57B0BDABeA57b0bdABEA57b0BDabEa57\",\n              \"0xB0B0b0b0b0b0B000000000000000000000000000\",\n            ],\n          },\n        ],\n      },\n      primaryType: \"Mail\",\n      types: {\n        EIP712Domain: [\n          { name: \"name\", type: \"string\" },\n          { name: \"version\", type: \"string\" },\n          { name: \"chainId\", type: \"uint256\" },\n          { name: \"verifyingContract\", type: \"address\" },\n        ],\n        Group: [\n          { name: \"name\", type: \"string\" },\n          { name: \"members\", type: \"Person[]\" },\n        ],\n        Mail: [\n          { name: \"from\", type: \"Person\" },\n          { name: \"to\", type: \"Person[]\" },\n          { name: \"contents\", type: \"string\" },\n        ],\n        Person: [\n          { name: \"name\", type: \"string\" },\n          { name: \"wallets\", type: \"address[]\" },\n        ],\n      },\n    };\n    try {\n      const from = await web3.eth.getAccounts();\n      const sign = await ethereum.request({\n        method: \"eth_signTypedData_v4\",\n        params: [from[0], JSON.stringify(msgParams)],\n      });\n      setSignedResult(prevSignedResult => {\n        return [\n          ...prevSignedResult,\n          {signedData: sign}\n        ]\n      })\n      console.log(signedResult)\n      // puts the result in \"signedResult\" state\n    } catch (err) {\n      console.error(err);\n    }\n\n    await updateStatus()\n    \n  }; // Signing message with signTypedDataV4\n\n  return (\n    <div>\n      <div\n        className=\"top-left\"\n        style={{\n          fontSize: \"1em\",\n          display: \"flex\",\n          alignItems: \"center\",\n          margin: 6,\n          justifyContent: \"space-between\"\n        }}\n      >\n        <b>Network </b>\n        &nbsp;\n        <Select\n          value={version}\n          label=\"version\"\n          onChange={(e) => {\n            console.log(e.target.value);\n            let target;\n            if (e.target.value === 2) {\n              target = \"https://adventurepizza.github.io/Network2/\";\n            } else if (e.target.value === 3) {\n              target = \"https://adventurepizza.github.io/Network3/\";\n            }\n\n            window.location.href = target;\n            return null;\n          }}\n        >\n          <MenuItem value={1}> {versionNames[1]}</MenuItem>\n          <MenuItem value={2}> {versionNames[2]}</MenuItem>\n          <MenuItem value={3}> {versionNames[3]}</MenuItem>\n        </Select>\n        &nbsp; 📠\n        <Button style={{marginLeft: \"auto\"}} onClick={metamaskLogin}>{activeAccount ? `Sigend as: ${activeAccount}`: \"Connect With Metamask\"}</Button>\n      </div>\n\n      <div style={{ fontSize: \"0.9em\", marginTop: 13, marginLeft: 13 }}>\n        <b>History</b>\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          width: \"90%\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          overflowX: \"scroll\",\n        }}\n      >\n        {signedResult ? statusHistory &&\n          statusHistory.map((profile) => (\n            <div\n              key={profile.timestamp}\n              style={{ textAlign: \"center\", margin: 6 }}\n            >\n              <div\n                style={{\n                  width: 80,\n                  height: 20,\n                  backgroundColor: profile.color,\n                  border: \"solid 4px \",\n                  marginInline: 4,\n                }}\n              ></div>\n              <Button\n                title={profile.key}\n                size={\"small\"}\n                onClick={async () => {\n                  navigator.clipboard.writeText(profile.key);\n                  enqueueSnackbar(\"Address copied ! \" + profile.key, {\n                    variant: \"success\",\n                  });\n                }}\n              >\n                {profile.username}{\" \"}\n              </Button>\n            </div>\n          )): \"\"}\n      </div>\n\n      <div style={{ fontSize: \"0.9em\", marginTop: 6, marginLeft: 13 }}>\n        <b>Recent Status</b>\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          width: \"90%\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          overflowX: \"scroll\",\n        }}\n      >\n        <div style={{ textAlign: \"center\", margin: 6 }}>\n          <div\n            style={{\n              width: 80,\n              height: 20,\n              backgroundColor: profile.color,\n              border: \"solid 4px \",\n              marginInline: 4,\n            }}\n          ></div>\n\n          <Button\n            title={profile.key}\n            size={\"small\"}\n            onClick={async () => {\n              navigator.clipboard.writeText(profile.key);\n              enqueueSnackbar(\"Address copied ! \" + profile.key, {\n                variant: \"success\",\n              });\n            }}\n          >\n            {profile.username}{\" \"}\n          </Button>\n          \n        </div>\n\n        {profiles &&\n          profiles.map(\n            (profile) =>\n              (!activeAccount || profile.key !== activeAccount.address) && (\n                <div\n                  key={profile.key}\n                  style={{ textAlign: \"center\", margin: 6 }}\n                >\n                  <div\n                    style={{\n                      width: 80,\n                      height: 20,\n                      backgroundColor: profile.color,\n                      border: \"solid 4px \",\n                      marginInline: 4,\n                    }}\n                  ></div>\n                  <Button\n                    title={profile.key}\n                    size={\"small\"}\n                    onClick={async () => {\n                      navigator.clipboard.writeText(profile.key);\n                      enqueueSnackbar(\"Address copied ! \" + profile.key, {\n                        variant: \"success\",\n                      });\n                    }}\n                  >\n                    {profile.username}{\" \"}\n                  </Button>\n                </div>\n              )\n          )}\n      </div>\n\n      <div style={{ width: \"90%\", marginLeft: \"auto\", marginRight: \"auto\" }}>\n        <HexColorPicker color={color} onChange={setColor} />\n        <br></br>\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\n          <TextField\n            id=\"outlined-basic\"\n            label=\"info\"\n            variant=\"outlined\"\n            placeholder=\"Status\"\n            size=\"small\"\n            onChange={handleChangeUsername}\n            value={usernameInput}\n            onKeyPress={handleKeyPress}\n          />\n          <Button\n            size={\"small\"}\n            title={\"update status\"}\n            onClick={() => {signDataV4()}}\n            \n          >\n            {\" \"}\n            \n              <u>update status</u>\n           \n          </Button>\n          \n        </div>\n      </div>\n\n      <div className=\"bottom-left\" style={{ position: \"absolute\" }}>\n        <Button title={\"Adventure Networks\"} size={\"small\"} onClick={() => {}}>\n          {\" \"}\n          <div style={{ textAlign: \"left\" }}>\n            {\" \"}\n            Adventure <br></br>Networks{\" \"}\n          </div>{\" \"}\n        </Button>\n      </div>\n      \n\n      \n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"./index.css\";\n\nimport App from \"./App\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { FirebaseProvider } from \"./firebaseContext\";\nimport { SnackbarProvider } from \"notistack\";\n\nReactDOM.render(\n  <FirebaseProvider>\n    <SnackbarProvider maxSnack={3}>\n      <App />\n    </SnackbarProvider>\n  </FirebaseProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}